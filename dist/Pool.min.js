"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function set_constant(t,e,o){Object.defineProperty(t,e,{writable:!1,configurable:!1,value:o})}var _createClass=function(){function t(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,o,r){return o&&t(e.prototype,o),r&&t(e,r),e}}(),Pool=function(){function t(e){var o=arguments.length<=1||void 0===arguments[1]?-1:arguments[1],r=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],n=r.clearMethodName,s=void 0===n?null:n,i=r.destroyMethodName,a=void 0===i?null:i,c=r.isFactory,l=void 0===c?!1:c;_classCallCheck(this,t),this.size=o,set_constant(this,"ObjectConstructor",e),set_constant(this,"objectClearMethodName",s),set_constant(this,"objectDestroyMethodName",a),set_constant(this,"objectConstructorIsFactory",l),set_constant(this,"borrowedObjects",[]),set_constant(this,"availableObjects",[])}return _createClass(t,[{key:"destroy",value:function(){this._destroyChildren(this.borrowedObjects),this._destroyChildren(this.availableObjects)}},{key:"_destroyChildren",value:function(t){var e=this.objectDestroyMethodName||this.clearMethodName;if(!e)return void t.splice(0,t.length);for(var o=void 0;o=t.pop();)try{o[e].call(o)}catch(r){if("undefined"==typeof console)throw r;console.log("Error during destroy")}}},{key:"borrows",value:function(){var t=null;return this.hasAvailables()&&(t=0===this.availableObjects.length?this.objectConstructorIsFactory?this.ObjectConstructor():new this.ObjectConstructor:this.availableObjects.pop(),this.borrowedObjects.push(t)),t}},{key:"returns",value:function(t){if(!(t instanceof this.ObjectConstructor))throw new Error("Can't return object which is not a "+this.ObjectConstructor.name);var e=this.borrowedObjects.indexOf(t);if(-1===e){if(this.availableObjects.includes(t))throw new Error(this.ObjectConstructor.name+" already returned !");throw new Error("Object given in Pool#returns() is not referenced in this Pool instance.")}if(this.borrowedObjects.splice(e,1),null!==this.objectClearMethodName)try{t[this.objectClearMethodName].call(t)}catch(o){if("undefined"==typeof console)throw o;console.log("Unable to call method "+this.objectClearMethodName+" on object instance "+String(t))}this.availableObjects.push(t)}},{key:"hasAvailables",value:function(){return-1===this.size||this.borrowedObjects.length<this.size}},{key:"getCountAvailables",value:function(){return this.availableObjects.length}},{key:"getCountBorrowed",value:function(){return this.borrowedObjects.length}},{key:"toString",value:function(){return"Pool<"+this.ObjectConstructor.name+">(borrowed: "+this.getCountBorrowed()+", available: "+this.getCountAvailables()+")"}}]),t}();